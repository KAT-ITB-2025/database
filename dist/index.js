import {pgEnum,pgTable,timestamp,text,date,real,integer,serial,unique,boolean}from'drizzle-orm/pg-core';import {init}from'@paralleldrive/cuid2';import {relations}from'drizzle-orm';var I=init({length:8}),s=()=>new Date;var W=pgEnum("account_role_enum",["admin","mamet","mentor","user","guest"]),_=pgTable("account",{id:text("id").primaryKey(),nim:text("nim").notNull().unique(),password:text("password").notNull(),role:W("role").default("user").notNull(),createdAt:timestamp("created_at").defaultNow(),updatedAt:timestamp("updated_at").$onUpdate(s)}),oe=relations(_,({one:e})=>({user:e(o,{fields:[_.id],references:[o.id]})}));var o=pgTable("user",{id:text("id").primaryKey().references(()=>_.id),nim:text("nim").notNull().unique(),email:text("email").unique(),fullName:text("full_name"),birthDate:date("birth_date"),phoneNumber:text("phone_number"),idLine:text("id_line"),idDiscord:text("id_discord"),idInstagram:text("id_instagram"),fakultas:text("fakultas"),prodi:text("prodi"),kelompok:text("kelompok"),createdAt:timestamp("created_at").defaultNow(),updatedAt:timestamp("updated_at").$onUpdate(s)});var F=pgEnum("media_bucket_enum",["core","oskm","dikpus","profile","submission-dikpus","submission-oskm","other"]),q=pgTable("media",{id:text("id").primaryKey().$defaultFn(I),creatorId:text("creator_id").references(()=>o.id,{onDelete:"cascade"}).notNull(),name:text("name").unique().notNull(),bucket:F("bucket").notNull().default("other"),type:text("type").notNull(),url:text("url").notNull(),updatedAt:timestamp("updated_at",{withTimezone:true}).notNull().$onUpdate(s),createdAt:timestamp("created_at",{withTimezone:true}).notNull().defaultNow()}),R=pgTable("handbook",{mediaId:text("media_id").primaryKey().references(()=>q.id),title:text("title")}),ce=relations(q,({one:e})=>({handbook:e(R,{fields:[q.id],references:[R.mediaId]})}));var H=pgEnum("user_stage_progress_enum",["completed","in_progress","locked"]),i=pgTable("stage",{id:serial("id").primaryKey(),stageNumber:integer("stage_number").notNull(),title:text("title").notNull(),description:text("description"),availableDate:timestamp("available_date",{mode:"date",withTimezone:true}),deadlineDate:timestamp("deadline_date",{mode:"date",withTimezone:true}),quizWeight:real("quiz_weight").default(1).notNull(),roleplayWeight:real("roleplay_weight").default(0).notNull(),lgdWeight:real("lgd_weight").default(0).notNull(),stageWeight:real("stage_weight").default(0).notNull(),createdAt:timestamp("created_at").defaultNow(),updatedAt:timestamp("updated_at").$onUpdate(s)}),x=pgTable("user_stage_progress",{id:text("id").primaryKey(),userId:text("user_id").references(()=>o.id,{onDelete:"cascade"}),stageId:serial("stage_id").references(()=>i.id,{onDelete:"cascade"}),status:H("status").default("in_progress").notNull(),completedAt:timestamp("completed_at"),quizScore:integer("quiz_score"),updatedAt:timestamp("updated_at").$onUpdate(s)},e=>[unique("user_stage_unique").on(e.userId,e.stageId)]),xe=pgTable("user_extended_score",{id:text("id").primaryKey().references(()=>x.id),userId:text("user_id").references(()=>o.id,{onDelete:"cascade"}),stageId:serial("stage_id").references(()=>i.id,{onDelete:"cascade"}),stageNumber:integer("stage_number").notNull(),roleplayScore:integer("roleplay_score"),lgdScore:integer("lgd_score")}),f=pgTable("material",{id:serial("id").primaryKey(),stageId:serial("stage_id").references(()=>i.id,{onDelete:"cascade"}),profile:text("profile")}),w=pgTable("dialog",{id:serial("id").primaryKey(),materialId:serial("material_id").references(()=>f.id,{onDelete:"cascade"}),content:text("content"),order:integer("order").notNull()}),g=pgTable("quiz",{id:serial("id").primaryKey(),stageId:serial("stage_id").references(()=>i.id,{onDelete:"cascade"})}),c=pgTable("question",{id:serial("id").primaryKey(),quizId:serial("quiz_id").references(()=>g.id,{onDelete:"cascade"}),question:text("question").notNull(),order:integer("order").notNull()}),b=pgTable("answer_option",{id:serial("id").primaryKey(),questionId:serial("question_id").references(()=>c.id),option:text("option").notNull(),optionStatus:boolean("option_status").notNull()}),ke=relations(i,({many:e})=>({userStageProgresses:e(x),materials:e(f),quizzes:e(g)})),ye=relations(x,({one:e})=>({stage:e(i,{fields:[x.stageId],references:[i.id]})})),qe=relations(g,({one:e,many:k})=>({questions:k(c),stage:e(i,{fields:[g.stageId],references:[i.id]})})),we=relations(c,({one:e})=>({quiz:e(g,{fields:[c.quizId],references:[g.id]})})),be=relations(c,({many:e})=>({answerOptions:e(b)})),he=relations(b,({one:e})=>({question:e(c,{fields:[b.questionId],references:[c.id]})})),Ie=relations(f,({one:e,many:k})=>({dialogs:k(w),stage:e(i,{fields:[f.stageId],references:[i.id]})})),De=relations(w,({one:e})=>({material:e(f,{fields:[w.materialId],references:[f.id]})}));var Q=pgEnum("kelas_type_enum",["skill","issue"]),T=pgTable("kelas",{id_kelas:text("id_kelas").primaryKey(),kuota:integer("kuota").notNull(),judul:text("judul").notNull(),deskripsi:text("deskripsi").notNull(),pembicara:text("pembicara").notNull(),type:Q("type").notNull()}),Se=pgTable("pemilihan_kelas",{user_id:text("user_id").notNull().references(()=>o.id,{onDelete:"cascade"}),kelas_id:text("kelas_id").notNull().references(()=>T.id_kelas,{onDelete:"cascade"}),waktu:timestamp("waktu").defaultNow().notNull(),prioritas:integer("prioritas").notNull()}),Te=pgTable("peserta_kelas",{user_id:text("user_id").notNull().references(()=>o.id,{onDelete:"cascade"}),kelas_id:text("kelas_id").notNull().references(()=>T.id_kelas,{onDelete:"cascade"})});export{_ as account,oe as accountRelation,W as accountRoleEnum,b as answerOption,he as answerOptionRelation,w as dialog,De as dialogRelation,R as handbook,T as kelas,Q as kelasTypeEnum,f as material,Ie as materialRelation,q as media,F as mediaBucketEnum,ce as mediaRelation,Se as pemilihan_kelas,Te as peserta_kelas,c as question,be as questionRelation,we as questionsRelation,g as quiz,qe as quizRelation,i as stage,ke as stageRelation,o as user,xe as userExtendedScore,x as userStageProgress,ye as userStageProgressRelation,H as userStageProgressStatusEnum};